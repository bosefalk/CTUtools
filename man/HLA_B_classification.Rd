% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HLA_classification.R
\name{HLA_B_classification}
\alias{HLA_B_classification}
\title{Classify overall group of HLA-B alleles}
\usage{
HLA_B_classification(allele_b1, allele_b2, fields = 2, HLA_B_class = NULL)
}
\arguments{
\item{fields}{Number of fields from allele string reference document to use, should be same as number of fields in \code{allel_b1}.
For example, if allel_b1 = "07:02", fields should be 2 (the default value). This does not actually apply
any string manipulation to \code{allele_b1} & \code{allele_b2}, which needs to be done before passing to this function, 
using \code{\link{shorten_allel}}}

\item{allel_b1}{Allele column, as string}

\item{allel_b2}{Allele column, as string}

\item{HLA_C_class}{deprecated, used to pre-load classification data before this function was vectorized}
}
\value{
String vector with "Bw6", "Bw4 - 80T", "Bw4 - 80I", or \code{NA_character_}, as a string
}
\description{
Takes two HLA-B alleles, classifies them individually into Bw6, Bw4 - 80I or Bw4 - 80T using \code{\link{HLA_Classification}} and
\code{\link{HLA_B_class_data}}, and returns the overall group. If either allele is 80I that's the overall group, if not then if either is 80T that's the group,
otherwise Bw6.If either allel classification is unknown, returns NA.
}
\examples{
HLA_B_classification("07:02", "08:02")

dat <- data.frame(B1 = c("07:02", "07:02", "07:02"), B2 = c("07:36", "39:15", "08:02"))
HLA_B_classification(dat$B1, dat$B2)

# If either allele cannot be mapped to the reference data, NA is returned
dat_odd <- data.frame(B1 = c("07:02", "07:02", "07:02"), B2 = c(NA, "", "08:47"))
HLA_B_classification(dat_odd$B1, dat_odd$B2)
}
\seealso{
\code{\link{HLA_Classification}}, \code{\link{HLA_B_class_data}}
}
