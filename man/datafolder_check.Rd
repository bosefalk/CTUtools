% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datafolder_check.R
\name{datafolder_check}
\alias{datafolder_check}
\title{Check local data folder is up-to-date}
\usage{
datafolder_check(stop_on_error = TRUE)
}
\arguments{
\item{stop_on_error}{if TRUE, stops execution with an error message when a file is listed in data_folder_content.csv but doesn't match 
the contents of data/. If set to FALSE, instead outputs a warning and continues execution of the code.}
}
\value{
If no mismatches has been found, returns nothing. If a mismatch is found an error or warning is raised, with a message listing
 the files which are missing, changed, renamed, or are new in the data folder and not yet recorded. If the number of files to list is >15
 a temp file is opened with this information instead of printing it to console
}
\description{
We don't want to sync the actual data to git remotes. Instead, the data folder should be manually copied wherever it's safe,
and there should be a list in doc/data_folder_content.csv with a list of the files expected in data/, and their md5 checksums. 
This .csv is synced to git, so we can check against it at the start of every analysis script that the actual files in the data 
folder on this machine matches what the rest of the code expects to be there. This is what this function does - compares 
doc/data_folder_content.csv to the actual contents in data/, and outputs an error or warning if things are not matching, with a list
of mismatches.
}
\details{
The intention is to add this datafolder_check() call at the top of every analysis script to automatically catch data mismatches

The md5 checksum is created using \code{openssl::md5(file(<filename>))}

Generating doc/data_folder_content.csv is done using \code{\link{datafolder_update}}

\code{tests/testthat/test_data_folder_content.R} has a large number of tests for different combinations of updates and examples of the messages
}
\seealso{
\code{\link{datafolder_update}}
}
